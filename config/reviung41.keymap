#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define _L_QWE 0
#define _L_COL 1
#define _L_SYM 2
#define _L_FUN 3
#define _L_BLU 4

/ {
  chosen {
        zmk,matrix_transform = &default_transform;
        //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_capsword {
            timeout-ms = <50>;
            key-positions = <15 16 19 20>; // Double shift
            bindings = <&caps_word>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <18 30>; // H + N
            bindings = <&kp MINUS>;
        };
        combo_lshift {
            timeout-ms = <50>;
            key-positions = <15 16>; // D + F
            bindings = <&kp LSHFT>;
        };
        combo_rshift {
            timeout-ms = <50>;
            key-positions = <19 20>; // J + K
            bindings = <&kp LSHFT>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <_L_SYM _L_FUN>;
            then-layer = <_L_BLU>;
        };
    };
};

&lt {
    tapping-term-ms = <200>;
};

/ {
        behaviors {
                tdesc: tap_dance_ESC {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_ESC";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp GRAVE>, <&kp ESC>;
                };
                hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer { // 0
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  `   |  Q  |  W  |  E  |  R   |  T  |   |  Y   |  U  |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F   |  G  |   |  H   |  J  |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V   |  B  |   |  N   |  M  |  ,  |  .  |  /  |  \   |
//                    | GUI | CTRL | SPC |   | SHFT | RET | ALT |
                        bindings = <
   &tdesc    &kp Q      &kp W      &kp E       &kp R  &kp T    &kp Y  &kp U  &kp I           &kp O        &kp P         &kp BSPC
   &kp TAB   &kp A      &kp S      &kp D       &kp F  &kp G    &kp H  &kp J  &kp K           &kp L        &kp SEMI      &kp APOS
   &kp LSHFT &hm LALT Z &hm LGUI X &hm LCTRL C &kp V  &kp B    &kp N  &kp M  &hm RCTRL COMMA &hm RGUI DOT &hm RALT FSLH &hm RSHFT BSLH
                              &kp LGUI &lt _L_SYM BSPC   &kp SPACE   &lt _L_FUN RET &kp LALT
                        >;
                };

                colemak_layer { // 1
                        label = "COLEMAK";
// -----------------------------------------------------------------------------------------
// |  `   |  Q  |  W  |  F  |  P   |  B  |   |  J   |  L   |  U  |  Y  |  ;  | BKSP |
// | TAB  |  A  |  R  |  S  |  T   |  G  |   |  M   |  N   |  E  |  I  |  O  |  '   |
// | SHFT |  Z  |  X  |  C  |  D   |  V  |   |  K   |  H   |  ,  |  .  |  /  |  \   |
//                    | GUI | CTRL | SPC |   | SHFT | BSPC | ALT |
                        bindings = <
   &tdesc    &kp Q      &kp W      &kp F       &kp P  &kp B   &kp J &kp L  &kp U           &kp Y        &kp SEMI      &kp BSPC
   &kp TAB   &kp A      &kp R      &kp S       &kp T  &kp G   &kp M &kp N  &kp E           &kp I        &kp O         &kp APOS
   &kp LSHFT &hm LALT Z &hm LGUI X &hm LCTRL C &kp D  &kp V   &kp K &kp H  &hm RCTRL COMMA &hm RGUI DOT &hm RALT FSLH &hm RSHFT BSLH
                              &kp LGUI &lt _L_SYM BSPC   &kp SPACE  &lt _L_FUN RET &kp LALT
                        >;
                };

                lower_layer { // 2
                        label = "SYMBOLS";
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  /  |  7  |  8  |  9  |  +  | DEL |
// |      |  ^  |  &  |  *  |  (  |  )  |   |  -  |  4  |  5  |  6  |  0  |  =  |
// | SHFT |     |  [  |  ]  |  {  |  }  |   |  _  |  1  |  2  |  3  |  .  |     |
//                    | GUI |     | SPC |   | ENT | LYR3 | ALT |
                        bindings = <
   &kp ESC &kp EXCL  &kp AT   &kp HASH &kp DLLR  &kp PRCNT   &kp SLASH &kp N7 &kp N8 &kp N9 &kp PLUS &kp DEL
   &trans  &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR    &kp MINUS &kp N4 &kp N5 &kp N6 &kp N0   &kp EQUAL
   &trans  &trans    &kp LBKT &kp RBKT &kp LBRC  &kp RBRC    &kp UNDER &kp N1 &kp N2 &kp N3 &kp DOT  &trans
                                      &trans  &trans   &trans   &trans  &trans
                        >;
                };

                raise_layer { // 3
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// |      |  F1 | F2  | F3  | F4  |     |   |     | SCRL |  UP  | SCRR | VOL+ | CAPS |
// | CTRL |  F5 | F6  | F7  | F8  |     |   |     | LEFT | DOWN | RGHT | VOL+ |      |
// | SHFT |  F9 | F10 | F11 | F12 |     |   |     | PREV | PLAY | NEXT | MUTE |      |
//                   | GUI | LYR3 | SPC |   | ENT |      | ALT  |
                        bindings = <
   &trans &kp F1 &kp F2  &kp F3  &kp F4  &trans    &trans &kp LG(LC(LEFT)) &kp UP   &kp LG(LC(RIGHT)) &kp C_VOL_UP &kp CAPS
   &trans &kp F5 &kp F6  &kp F7  &kp F8  &trans    &trans &kp LEFT         &kp DOWN &kp RIGHT         &kp C_VOL_DN &kp LC(PSCRN)
   &trans &kp F9 &kp F10 &kp F11 &kp F12 &trans    &trans &kp C_PREV       &kp C_PP &kp C_NEXT        &kp C_MUTE   &kp LG(LS(N2)) 
                            &trans  &trans   &trans   &trans  &trans
                        >;
                };

                adjust_layer { // 4
                        label = "BT";
// -----------------------------------------------------------------------------------------
// |     | BT0 | BT1 | BT2 | BT3 | BT4 |   | LYR1|     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |BTCLR|   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &trans &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3 &bt BT_SEL 4      &tog 1 &trans &trans &trans &trans &trans 
   &trans &trans          &trans          &trans          &trans       &trans            &trans &trans &trans &trans &trans &trans
   &trans &rgb_ug RGB_TOG &rgb_ug RGB_EFR &rgb_ug RGB_EFF &trans       &bt BT_CLR        &trans &trans &trans &trans &trans &bootloader 
                                    &trans       &trans       &trans            &trans &trans
                        >;
                };
        };
};
